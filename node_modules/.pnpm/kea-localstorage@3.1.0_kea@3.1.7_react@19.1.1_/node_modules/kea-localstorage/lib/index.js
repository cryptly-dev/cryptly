"use strict";
var __spreadArray = (this && this.__spreadArray) || function (to, from) {
    for (var i = 0, il = from.length, j = to.length; i < il; i++, j++)
        to[j] = from[i];
    return to;
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.persistentReducers = exports.persistReducer = exports.localStoragePlugin = void 0;
var kea_1 = require("kea");
var localStorageEngine;
try {
    localStorageEngine = window.localStorage;
    var x = '__storage_test__';
    localStorageEngine.setItem(x, x);
    localStorageEngine.removeItem(x);
}
catch (e) {
    localStorageEngine = undefined;
}
var localStoragePlugin = function (pluginOptions) {
    var _a, _b, _c;
    if (pluginOptions === void 0) { pluginOptions = {}; }
    var prefix = (_a = pluginOptions.prefix) !== null && _a !== void 0 ? _a : '';
    var separator = (_b = pluginOptions.separator) !== null && _b !== void 0 ? _b : '.';
    var storageEngine = (_c = pluginOptions.storageEngine) !== null && _c !== void 0 ? _c : localStorageEngine;
    return {
        name: 'localStorage',
        events: {
            afterPlugin: function () {
                kea_1.setPluginContext('localStorage', { storageCache: {}, storageEngine: storageEngine, prefix: prefix, separator: separator });
            },
            afterLogic: function (logic, input) {
                var _a;
                for (var _i = 0, _b = Object.entries(logic.reducerOptions); _i < _b.length; _i++) {
                    var _c = _b[_i], key = _c[0], reducerOptions = _c[1];
                    if (reducerOptions === null || reducerOptions === void 0 ? void 0 : reducerOptions.persist) {
                        persistentReducers((_a = {}, _a[key] = {}, _a))(logic);
                    }
                }
            },
        },
    };
};
exports.localStoragePlugin = localStoragePlugin;
function persistReducer(key) {
    return function (logic) {
        var _a, _b, _c, _d, _e, _f, _g, _h;
        var _j, _k, _l;
        var key_ = key;
        var _m = kea_1.getPluginContext('localStorage'), storageCache = _m.storageCache, storageEngine = _m.storageEngine, __prefix = _m.prefix, __separator = _m.separator;
        var prefix = ((_a = logic.reducerOptions[key_]) === null || _a === void 0 ? void 0 : _a.prefix) || __prefix;
        var separator = ((_b = logic.reducerOptions[key_]) === null || _b === void 0 ? void 0 : _b.separator) || __separator;
        var storageKey = ((_c = logic.reducerOptions[key_]) === null || _c === void 0 ? void 0 : _c.storageKey) || __spreadArray(__spreadArray([], logic.path), [key]).join(separator);
        var path = "" + (prefix ? prefix + separator : '') + storageKey;
        if (!storageEngine) {
            throw new Error("[KEA] LocalStorage plugin requires a \"storageEngine\"");
        }
        if (logic.pathString.indexOf('kea.logic.') === 0) {
            throw new Error('[KEA] Logic must have a unique path to persist reducers');
        }
        (_d = (_j = logic.cache).localStorage) !== null && _d !== void 0 ? _d : (_j.localStorage = {});
        (_e = (_k = logic.cache).localStorageDefaults) !== null && _e !== void 0 ? _e : (_k.localStorageDefaults = {});
        (_f = (_l = logic.cache.localStorageDefaults)[key]) !== null && _f !== void 0 ? _f : (_l[key] = (_g = logic.defaults[key]) !== null && _g !== void 0 ? _g : null);
        if (typeof storageEngine[path] !== 'undefined') {
            try {
                logic.defaults[key] = JSON.parse(storageEngine[path]);
            }
            catch (e) {
                storageEngine[path] = undefined;
            }
        }
        else {
            storageEngine[path] = (_h = logic.defaults[key]) !== null && _h !== void 0 ? _h : null;
        }
        storageCache[path] = logic.defaults[key];
        var reducer = logic.reducers[key];
        if (reducer) {
            logic.reducers[key] = function (state, action) {
                var result = reducer(state, action);
                if (storageCache[path] !== result) {
                    storageCache[path] = result;
                    storageEngine[path] = JSON.stringify(result);
                }
                return result;
            };
        }
    };
}
exports.persistReducer = persistReducer;
function persistentReducers(input) {
    return function (logic) {
        var reducersInput = typeof input === 'function' ? input(logic) : input;
        kea_1.reducers(reducersInput)(logic);
        for (var _i = 0, _a = Object.keys(reducersInput); _i < _a.length; _i++) {
            var key = _a[_i];
            persistReducer(key)(logic);
        }
    };
}
exports.persistentReducers = persistentReducers;
//# sourceMappingURL=index.js.map