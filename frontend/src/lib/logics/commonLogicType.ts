// Generated by kea-typegen on Thu, 25 Sep 2025 20:50:59 GMT. DO NOT EDIT THIS FILE MANUALLY.

import type { Logic } from 'kea'

export interface commonLogicType extends Logic {
    actionCreators: {
        setInviteIdToShowAfterLogin: (inviteIdToShowAfterLogin: string | null) => ({
            type: "set invite id to show after login (src.lib.logics.commonLogic)";
            payload: {
                inviteIdToShowAfterLogin: string | null;
            };
        });
        setShouldReopenIntegrationsDialog: (shouldReopenIntegrationsDialog: boolean) => ({
            type: "set should reopen integrations dialog (src.lib.logics.commonLogic)";
            payload: {
                shouldReopenIntegrationsDialog: boolean;
            };
        });
    };
    actionKeys: {
        "set invite id to show after login (src.lib.logics.commonLogic)": "setInviteIdToShowAfterLogin";
        "set should reopen integrations dialog (src.lib.logics.commonLogic)": "setShouldReopenIntegrationsDialog";
    };
    actionTypes: {
        setInviteIdToShowAfterLogin: "set invite id to show after login (src.lib.logics.commonLogic)";
        setShouldReopenIntegrationsDialog: "set should reopen integrations dialog (src.lib.logics.commonLogic)";
    };
    actions: {
        setInviteIdToShowAfterLogin: (inviteIdToShowAfterLogin: string | null) => void;
        setShouldReopenIntegrationsDialog: (shouldReopenIntegrationsDialog: boolean) => void;
    };
    asyncActions: {
        setInviteIdToShowAfterLogin: (inviteIdToShowAfterLogin: string | null) => Promise<any>;
        setShouldReopenIntegrationsDialog: (shouldReopenIntegrationsDialog: boolean) => Promise<any>;
    };
    defaults: {
        inviteIdToShowAfterLogin: string | null;
        shouldReopenIntegrationsDialog: boolean;
    };
    events: {};
    key: undefined;
    listeners: {};
    path: [
        "src",
        "lib",
        "logics",
        "commonLogic"
    ];
    pathString: "src.lib.logics.commonLogic";
    props: Record<string, unknown>;
    reducer: (state: any, action: any, fullState: any) => {
        inviteIdToShowAfterLogin: string | null;
        shouldReopenIntegrationsDialog: boolean;
    };
    reducers: {
        inviteIdToShowAfterLogin: (state: string | null, action: any, fullState: any) => string | null;
        shouldReopenIntegrationsDialog: (state: boolean, action: any, fullState: any) => boolean;
    };
    selector: (state: any) => {
        inviteIdToShowAfterLogin: string | null;
        shouldReopenIntegrationsDialog: boolean;
    };
    selectors: {
        inviteIdToShowAfterLogin: (state: any, props?: any) => string | null;
        shouldReopenIntegrationsDialog: (state: any, props?: any) => boolean;
    };
    sharedListeners: {};
    values: {
        inviteIdToShowAfterLogin: string | null;
        shouldReopenIntegrationsDialog: boolean;
    };
    _isKea: true;
    _isKeaWithKey: false;
}