// Generated by kea-typegen on Tue, 16 Sep 2025 16:52:24 GMT. DO NOT EDIT THIS FILE MANUALLY.

import type { Logic } from 'kea'

import type { ProjectData, ProjectLogicProps } from './projectLogic'
import type { User } from '../api/user.api'

export interface projectLogicType extends Logic {
    actionCreators: {
        setProjectData: (projectData: ProjectData) => ({
            type: "set project data (src.lib.logics.projectLogic)";
            payload: {
                projectData: ProjectData;
            };
        });
    };
    actionKeys: {
        "set project data (src.lib.logics.projectLogic)": "setProjectData";
    };
    actionTypes: {
        setProjectData: "set project data (src.lib.logics.projectLogic)";
    };
    actions: {
        setProjectData: (projectData: ProjectData) => void;
    };
    asyncActions: {
        setProjectData: (projectData: ProjectData) => Promise<any>;
    };
    defaults: {
        projectData: ProjectData;
    };
    events: {
        afterMount: () => void;
    };
    key: string;
    listeners: {};
    path: [
        "src",
        "lib",
        "logics",
        "projectLogic"
    ];
    pathString: "src.lib.logics.projectLogic";
    props: ProjectLogicProps;
    reducer: (state: any, action: any, fullState: any) => {
        projectData: ProjectData;
    };
    reducers: {
        projectData: (state: ProjectData, action: any, fullState: any) => ProjectData;
    };
    selector: (state: any) => {
        projectData: ProjectData;
    };
    selectors: {
        projectData: (state: any, props?: any) => ProjectData;
        privateKeyDecrypted: (state: any, props?: any) => string | null;
        userData: (state: any, props?: any) => User | null;
    };
    sharedListeners: {};
    values: {
        projectData: ProjectData;
        privateKeyDecrypted: string | null;
        userData: User | null;
    };
    _isKea: true;
    _isKeaWithKey: true;
}