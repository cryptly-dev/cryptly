/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as IndexRouteImport } from './routes/index'
import { Route as AppMeRouteImport } from './routes/app/me'
import { Route as AppLoginRouteImport } from './routes/app/login'
import { Route as AppDeveloperRouteImport } from './routes/app/developer'
import { Route as AppProjectProjectIdRouteImport } from './routes/app/project/$projectId'
import { Route as AppCallbacksOauthGoogleRouteImport } from './routes/app/callbacks/oauth/google'
import { Route as AppCallbacksOauthGithubRouteImport } from './routes/app/callbacks/oauth/github'

const IndexRoute = IndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)
const AppMeRoute = AppMeRouteImport.update({
  id: '/app/me',
  path: '/app/me',
  getParentRoute: () => rootRouteImport,
} as any)
const AppLoginRoute = AppLoginRouteImport.update({
  id: '/app/login',
  path: '/app/login',
  getParentRoute: () => rootRouteImport,
} as any)
const AppDeveloperRoute = AppDeveloperRouteImport.update({
  id: '/app/developer',
  path: '/app/developer',
  getParentRoute: () => rootRouteImport,
} as any)
const AppProjectProjectIdRoute = AppProjectProjectIdRouteImport.update({
  id: '/app/project/$projectId',
  path: '/app/project/$projectId',
  getParentRoute: () => rootRouteImport,
} as any)
const AppCallbacksOauthGoogleRoute = AppCallbacksOauthGoogleRouteImport.update({
  id: '/app/callbacks/oauth/google',
  path: '/app/callbacks/oauth/google',
  getParentRoute: () => rootRouteImport,
} as any)
const AppCallbacksOauthGithubRoute = AppCallbacksOauthGithubRouteImport.update({
  id: '/app/callbacks/oauth/github',
  path: '/app/callbacks/oauth/github',
  getParentRoute: () => rootRouteImport,
} as any)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/app/developer': typeof AppDeveloperRoute
  '/app/login': typeof AppLoginRoute
  '/app/me': typeof AppMeRoute
  '/app/project/$projectId': typeof AppProjectProjectIdRoute
  '/app/callbacks/oauth/github': typeof AppCallbacksOauthGithubRoute
  '/app/callbacks/oauth/google': typeof AppCallbacksOauthGoogleRoute
}
export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/app/developer': typeof AppDeveloperRoute
  '/app/login': typeof AppLoginRoute
  '/app/me': typeof AppMeRoute
  '/app/project/$projectId': typeof AppProjectProjectIdRoute
  '/app/callbacks/oauth/github': typeof AppCallbacksOauthGithubRoute
  '/app/callbacks/oauth/google': typeof AppCallbacksOauthGoogleRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexRoute
  '/app/developer': typeof AppDeveloperRoute
  '/app/login': typeof AppLoginRoute
  '/app/me': typeof AppMeRoute
  '/app/project/$projectId': typeof AppProjectProjectIdRoute
  '/app/callbacks/oauth/github': typeof AppCallbacksOauthGithubRoute
  '/app/callbacks/oauth/google': typeof AppCallbacksOauthGoogleRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/app/developer'
    | '/app/login'
    | '/app/me'
    | '/app/project/$projectId'
    | '/app/callbacks/oauth/github'
    | '/app/callbacks/oauth/google'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/app/developer'
    | '/app/login'
    | '/app/me'
    | '/app/project/$projectId'
    | '/app/callbacks/oauth/github'
    | '/app/callbacks/oauth/google'
  id:
    | '__root__'
    | '/'
    | '/app/developer'
    | '/app/login'
    | '/app/me'
    | '/app/project/$projectId'
    | '/app/callbacks/oauth/github'
    | '/app/callbacks/oauth/google'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  AppDeveloperRoute: typeof AppDeveloperRoute
  AppLoginRoute: typeof AppLoginRoute
  AppMeRoute: typeof AppMeRoute
  AppProjectProjectIdRoute: typeof AppProjectProjectIdRoute
  AppCallbacksOauthGithubRoute: typeof AppCallbacksOauthGithubRoute
  AppCallbacksOauthGoogleRoute: typeof AppCallbacksOauthGoogleRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/app/me': {
      id: '/app/me'
      path: '/app/me'
      fullPath: '/app/me'
      preLoaderRoute: typeof AppMeRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/app/login': {
      id: '/app/login'
      path: '/app/login'
      fullPath: '/app/login'
      preLoaderRoute: typeof AppLoginRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/app/developer': {
      id: '/app/developer'
      path: '/app/developer'
      fullPath: '/app/developer'
      preLoaderRoute: typeof AppDeveloperRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/app/project/$projectId': {
      id: '/app/project/$projectId'
      path: '/app/project/$projectId'
      fullPath: '/app/project/$projectId'
      preLoaderRoute: typeof AppProjectProjectIdRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/app/callbacks/oauth/google': {
      id: '/app/callbacks/oauth/google'
      path: '/app/callbacks/oauth/google'
      fullPath: '/app/callbacks/oauth/google'
      preLoaderRoute: typeof AppCallbacksOauthGoogleRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/app/callbacks/oauth/github': {
      id: '/app/callbacks/oauth/github'
      path: '/app/callbacks/oauth/github'
      fullPath: '/app/callbacks/oauth/github'
      preLoaderRoute: typeof AppCallbacksOauthGithubRouteImport
      parentRoute: typeof rootRouteImport
    }
  }
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  AppDeveloperRoute: AppDeveloperRoute,
  AppLoginRoute: AppLoginRoute,
  AppMeRoute: AppMeRoute,
  AppProjectProjectIdRoute: AppProjectProjectIdRoute,
  AppCallbacksOauthGithubRoute: AppCallbacksOauthGithubRoute,
  AppCallbacksOauthGoogleRoute: AppCallbacksOauthGoogleRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
